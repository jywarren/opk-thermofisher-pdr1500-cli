#!/usr/bin/env node

var program = require('commander');
var serialport = require("serialport");
var SerialPort = serialport.SerialPort; // localize object constructor

// set up CLI flags
// Later, maybe add: "Detect the path by running the detect command."
program
  .version('0.0.1')
  .option('-p, --path <path>', "Set a path to the Shinyei device's Arduino-based USB interface, default /dev/ttyUSB0", '/dev/ttyUSB0')
  .option('-b, --baudrate <rate>', "Set a baudrate for the serial interface, default 19200", 19200)
  .option('-c, --command <cmd>', "Enter a command to send over te serial interface")
  .option('-v, --verbose', 'Turn on verbose mode')
  .option('-j, --json', 'Return JSON output')
  .parse(process.argv);

var log = function(msg) {
  if (program.verbose) {
    console.log(msg);
  }
}

var serialPort = new SerialPort(program.path, {
  baudrate:     program.baudrate,
  parity:       'none',
  dataBits:     8, // Bits per character
  stopBits:     1, // The number of stop bit-times.
  flowControl:  false,
  bufferSize:   1,
  parser:       serialport.parsers.readline("\n")
});

serialPort.on("open", function () {
  console.log('open');

  serialPort.on('data', function(data) {
    console.log('data received: ' + data);
  });

  // serialPort.write(program.command+"\n\r", function(err, results) {
  serialPort.write(program.command+"", function(err, results) {
    console.log('err ' + err);
    console.log('results ' + results);
  });

  serialPort.on("error", function(string) {
    console.warn(string);
  });

});
